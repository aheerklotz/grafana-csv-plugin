{"version":3,"sources":["../src/response_parser.js"],"names":["_","ResponseParse","res","data","results","key","queryRes","series","push","target","name","datapoints","points","refId","meta","tables","table","type","length","rowCount","columns","rows","textColIndex","findColIndex","valueColIndex","transformToKeyValueList","transformToSimpleList","i","containsKey","text","value","j","indexOf","map","colName","options","annotation","timeColumnIndex","timeEndColumnIndex","textColumnIndex","tagsColumnIndex","Promise","reject","message","list","row","timeEnd","Math","floor","undefined","time","toString","tags","trim","split"],"mappings":";;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;AAEcC,mB;;;;;;;6CAEAC,G,EAAK;AACtB,gBAAMC,OAAO,EAAb;;AAEA,gBAAI,CAACD,IAAIC,IAAJ,CAASC,OAAd,EAAuB;AACrB,qBAAO,EAAED,MAAMA,IAAR,EAAP;AACD;;AAED,iBAAK,IAAME,GAAX,IAAkBH,IAAIC,IAAJ,CAASC,OAA3B,EAAoC;AAClC,kBAAME,WAAWJ,IAAIC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAjB;;AAEA,kBAAIC,SAASC,MAAb,EAAqB;AAAA;AAAA;AAAA;;AAAA;AACnB,uCAAqBD,SAASC,MAA9B,8HAAsC;AAAA,wBAA3BA,MAA2B;;AACpCJ,yBAAKK,IAAL,CAAU;AACRC,8BAAQF,OAAOG,IADP;AAERC,kCAAYJ,OAAOK,MAFX;AAGRC,6BAAOP,SAASO,KAHR;AAIRC,4BAAMR,SAASQ;AAJP,qBAAV;AAMD;AARkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASpB;;AAED,kBAAIR,SAASS,MAAb,EAAqB;AAAA;AAAA;AAAA;;AAAA;AACnB,wCAAoBT,SAASS,MAA7B,mIAAqC;AAAA,wBAA1BC,KAA0B;;AACnCA,0BAAMC,IAAN,GAAa,OAAb;AACAD,0BAAMH,KAAN,GAAcP,SAASO,KAAvB;AACAG,0BAAMF,IAAN,GAAaR,SAASQ,IAAtB;AACAX,yBAAKK,IAAL,CAAUQ,KAAV;AACD;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB;AACF;;AAED,mBAAO,EAAEb,MAAMA,IAAR,EAAP;AACD;;;qDAE0BU,K,EAAOT,O,EAAS;AACzC,gBAAI,CAACA,OAAD,IAAYA,QAAQD,IAAR,CAAae,MAAb,KAAwB,CAApC,IAAyCd,QAAQD,IAAR,CAAaC,OAAb,CAAqBS,KAArB,EAA4BC,IAA5B,CAAiCK,QAAjC,KAA8C,CAA3F,EAA8F;AAC5F,qBAAO,EAAP;AACD;;AAED,gBAAMC,UAAUhB,QAAQD,IAAR,CAAaC,OAAb,CAAqBS,KAArB,EAA4BE,MAA5B,CAAmC,CAAnC,EAAsCK,OAAtD;AACA,gBAAMC,OAAOjB,QAAQD,IAAR,CAAaC,OAAb,CAAqBS,KAArB,EAA4BE,MAA5B,CAAmC,CAAnC,EAAsCM,IAAnD;AACA,gBAAMC,eAAe,KAAKC,YAAL,CAAkBH,OAAlB,EAA2B,QAA3B,CAArB;AACA,gBAAMI,gBAAgB,KAAKD,YAAL,CAAkBH,OAAlB,EAA2B,SAA3B,CAAtB;;AAEA,gBAAIA,QAAQF,MAAR,KAAmB,CAAnB,IAAwBI,iBAAiB,CAAC,CAA1C,IAA+CE,kBAAkB,CAAC,CAAtE,EAAyE;AACvE,qBAAO,KAAKC,uBAAL,CAA6BJ,IAA7B,EAAmCC,YAAnC,EAAiDE,aAAjD,CAAP;AACD;;AAED,mBAAO,KAAKE,qBAAL,CAA2BL,IAA3B,CAAP;AACD;;;kDAEuBA,I,EAAMC,Y,EAAcE,a,EAAe;AACzD,gBAAMtB,MAAM,EAAZ;;AAEA,iBAAK,IAAIyB,IAAI,CAAb,EAAgBA,IAAIN,KAAKH,MAAzB,EAAiCS,GAAjC,EAAsC;AACpC,kBAAI,CAAC,KAAKC,WAAL,CAAiB1B,GAAjB,EAAsBmB,KAAKM,CAAL,EAAQL,YAAR,CAAtB,CAAL,EAAmD;AACjDpB,oBAAIM,IAAJ,CAAS;AACPqB,wBAAMR,KAAKM,CAAL,EAAQL,YAAR,CADC;AAEPQ,yBAAOT,KAAKM,CAAL,EAAQH,aAAR;AAFA,iBAAT;AAID;AACF;;AAED,mBAAOtB,GAAP;AACD;;;gDAEqBmB,I,EAAM;AAC1B,gBAAMnB,MAAM,EAAZ;;AAEA,iBAAK,IAAIyB,IAAI,CAAb,EAAgBA,IAAIN,KAAKH,MAAzB,EAAiCS,GAAjC,EAAsC;AACpC,mBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIV,KAAKM,CAAL,EAAQT,MAA5B,EAAoCa,GAApC,EAAyC;AACvC,oBAAMD,QAAQT,KAAKM,CAAL,EAAQI,CAAR,CAAd;AACA,oBAAI7B,IAAI8B,OAAJ,CAAYF,KAAZ,MAAuB,CAAC,CAA5B,EAA+B;AAC7B5B,sBAAIM,IAAJ,CAASsB,KAAT;AACD;AACF;AACF;;AAED,mBAAO9B,EAAEiC,GAAF,CAAM/B,GAAN,EAAW,iBAAS;AACzB,qBAAO,EAAE2B,MAAMC,KAAR,EAAP;AACD,aAFM,CAAP;AAGD;;;uCAEYV,O,EAASc,O,EAAS;AAC7B,iBAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAIP,QAAQF,MAA5B,EAAoCS,GAApC,EAAyC;AACvC,kBAAIP,QAAQO,CAAR,EAAWE,IAAX,KAAoBK,OAAxB,EAAiC;AAC/B,uBAAOP,CAAP;AACD;AACF;;AAED,mBAAO,CAAC,CAAR;AACD;;;sCAEWzB,G,EAAKG,G,EAAK;AACpB,iBAAK,IAAIsB,IAAI,CAAb,EAAgBA,IAAIzB,IAAIgB,MAAxB,EAAgCS,GAAhC,EAAqC;AACnC,kBAAIzB,IAAIyB,CAAJ,EAAOE,IAAP,KAAgBxB,GAApB,EAAyB;AACvB,uBAAO,IAAP;AACD;AACF;AACD,mBAAO,KAAP;AACD;;;sDAE2B8B,O,EAAShC,I,EAAM;AACzC,gBAAMa,QAAQb,KAAKA,IAAL,CAAUC,OAAV,CAAkB+B,QAAQC,UAAR,CAAmB1B,IAArC,EAA2CK,MAA3C,CAAkD,CAAlD,CAAd;;AAEA,gBAAIsB,kBAAkB,CAAC,CAAvB;AACA,gBAAIC,qBAAqB,CAAC,CAA1B;AACA,gBAAIC,kBAAkB,CAAC,CAAvB;AACA,gBAAIC,kBAAkB,CAAC,CAAvB;;AAEA,iBAAK,IAAIb,IAAI,CAAb,EAAgBA,IAAIX,MAAMI,OAAN,CAAcF,MAAlC,EAA0CS,GAA1C,EAA+C;AAC7C,kBAAIX,MAAMI,OAAN,CAAcO,CAAd,EAAiBE,IAAjB,KAA0B,UAA1B,IAAwCb,MAAMI,OAAN,CAAcO,CAAd,EAAiBE,IAAjB,KAA0B,MAAtE,EAA8E;AAC5EQ,kCAAkBV,CAAlB;AACD,eAFD,MAEO,IAAIX,MAAMI,OAAN,CAAcO,CAAd,EAAiBE,IAAjB,KAA0B,SAA9B,EAAyC;AAC9CS,qCAAqBX,CAArB;AACD,eAFM,MAEA,IAAIX,MAAMI,OAAN,CAAcO,CAAd,EAAiBE,IAAjB,KAA0B,OAA9B,EAAuC;AAC5C,uBAAOY,QAAQC,MAAR,CAAe;AACpBC,2BAAS;AADW,iBAAf,CAAP;AAGD,eAJM,MAIA,IAAI3B,MAAMI,OAAN,CAAcO,CAAd,EAAiBE,IAAjB,KAA0B,MAA9B,EAAsC;AAC3CU,kCAAkBZ,CAAlB;AACD,eAFM,MAEA,IAAIX,MAAMI,OAAN,CAAcO,CAAd,EAAiBE,IAAjB,KAA0B,MAA9B,EAAsC;AAC3CW,kCAAkBb,CAAlB;AACD;AACF;;AAED,gBAAIU,oBAAoB,CAAC,CAAzB,EAA4B;AAC1B,qBAAOI,QAAQC,MAAR,CAAe;AACpBC,yBAAS;AADW,eAAf,CAAP;AAGD;;AAED,gBAAMC,OAAO,EAAb;AACA,iBAAK,IAAIjB,KAAI,CAAb,EAAgBA,KAAIX,MAAMK,IAAN,CAAWH,MAA/B,EAAuCS,IAAvC,EAA4C;AAC1C,kBAAMkB,MAAM7B,MAAMK,IAAN,CAAWM,EAAX,CAAZ;AACA,kBAAMmB,UACJR,uBAAuB,CAAC,CAAxB,IAA6BO,IAAIP,kBAAJ,CAA7B,GAAuDS,KAAKC,KAAL,CAAWH,IAAIP,kBAAJ,CAAX,CAAvD,GAA6FW,SAD/F;AAEAL,mBAAKpC,IAAL,CAAU;AACR4B,4BAAYD,QAAQC,UADZ;AAERc,sBAAMH,KAAKC,KAAL,CAAWH,IAAIR,eAAJ,CAAX,CAFE;AAGRS,gCAHQ;AAIRjB,sBAAMgB,IAAIN,eAAJ,IAAuBM,IAAIN,eAAJ,EAAqBY,QAArB,EAAvB,GAAyD,EAJvD;AAKRC,sBAAMP,IAAIL,eAAJ,IAAuBK,IAAIL,eAAJ,EAAqBa,IAArB,GAA4BC,KAA5B,CAAkC,SAAlC,CAAvB,GAAsE;AALpE,eAAV;AAOD;;AAED,mBAAOV,IAAP;AACD;;;;;;yBArJkB3C,a","file":"response_parser.js","sourcesContent":["import _ from 'lodash';\n\nexport default class ResponseParse {\n\n  processQueryResult(res) {\n    const data = [];\n\n    if (!res.data.results) {\n      return { data: data };\n    }\n\n    for (const key in res.data.results) {\n      const queryRes = res.data.results[key];\n\n      if (queryRes.series) {\n        for (const series of queryRes.series) {\n          data.push({\n            target: series.name,\n            datapoints: series.points,\n            refId: queryRes.refId,\n            meta: queryRes.meta,\n          });\n        }\n      }\n\n      if (queryRes.tables) {\n        for (const table of queryRes.tables) {\n          table.type = 'table';\n          table.refId = queryRes.refId;\n          table.meta = queryRes.meta;\n          data.push(table);\n        }\n      }\n    }\n\n    return { data: data };\n  }\n\n  parseMetricFindQueryResult(refId, results) {\n    if (!results || results.data.length === 0 || results.data.results[refId].meta.rowCount === 0) {\n      return [];\n    }\n\n    const columns = results.data.results[refId].tables[0].columns;\n    const rows = results.data.results[refId].tables[0].rows;\n    const textColIndex = this.findColIndex(columns, '__text');\n    const valueColIndex = this.findColIndex(columns, '__value');\n\n    if (columns.length === 2 && textColIndex !== -1 && valueColIndex !== -1) {\n      return this.transformToKeyValueList(rows, textColIndex, valueColIndex);\n    }\n\n    return this.transformToSimpleList(rows);\n  }\n\n  transformToKeyValueList(rows, textColIndex, valueColIndex) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      if (!this.containsKey(res, rows[i][textColIndex])) {\n        res.push({\n          text: rows[i][textColIndex],\n          value: rows[i][valueColIndex],\n        });\n      }\n    }\n\n    return res;\n  }\n\n  transformToSimpleList(rows) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      for (let j = 0; j < rows[i].length; j++) {\n        const value = rows[i][j];\n        if (res.indexOf(value) === -1) {\n          res.push(value);\n        }\n      }\n    }\n\n    return _.map(res, value => {\n      return { text: value };\n    });\n  }\n\n  findColIndex(columns, colName) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].text === colName) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  containsKey(res, key) {\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].text === key) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  transformAnnotationResponse(options, data) {\n    const table = data.data.results[options.annotation.name].tables[0];\n\n    let timeColumnIndex = -1;\n    let timeEndColumnIndex = -1;\n    let textColumnIndex = -1;\n    let tagsColumnIndex = -1;\n\n    for (let i = 0; i < table.columns.length; i++) {\n      if (table.columns[i].text === 'time_sec' || table.columns[i].text === 'time') {\n        timeColumnIndex = i;\n      } else if (table.columns[i].text === 'timeend') {\n        timeEndColumnIndex = i;\n      } else if (table.columns[i].text === 'title') {\n        return Promise.reject({\n          message: 'The title column for annotations is deprecated, now only a column named text is returned',\n        });\n      } else if (table.columns[i].text === 'text') {\n        textColumnIndex = i;\n      } else if (table.columns[i].text === 'tags') {\n        tagsColumnIndex = i;\n      }\n    }\n\n    if (timeColumnIndex === -1) {\n      return Promise.reject({\n        message: 'Missing mandatory time column (with time_sec column alias) in annotation query.',\n      });\n    }\n\n    const list = [];\n    for (let i = 0; i < table.rows.length; i++) {\n      const row = table.rows[i];\n      const timeEnd =\n        timeEndColumnIndex !== -1 && row[timeEndColumnIndex] ? Math.floor(row[timeEndColumnIndex]) : undefined;\n      list.push({\n        annotation: options.annotation,\n        time: Math.floor(row[timeColumnIndex]),\n        timeEnd,\n        text: row[textColumnIndex] ? row[textColumnIndex].toString() : '',\n        tags: row[tagsColumnIndex] ? row[tagsColumnIndex].trim().split(/\\s*,\\s*/) : [],\n      });\n    }\n\n    return list;\n  }\n}\n"]}